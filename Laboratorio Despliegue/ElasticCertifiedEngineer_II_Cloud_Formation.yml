AWSTemplateFormatVersion: 2010-09-09
Description: Create EC2 instance in default VPC on Root accoount

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Network
      Parameters:
      - VPCId
      - VPCSubnet
    - Label:
        default: Security
      Parameters:
      - SSHAccessCIDR
      - HTTPAccessCIDR
      - KeyPairName
    - Label:
        default: Instance
      Parameters:
      - InstanceAMI
      - ElsInstanceType
      
Parameters:
  VPCId:
    ConstraintDescription: Must be a valid VPC ID
    Description: "The VPC ID to use"
    Type: "AWS::EC2::VPC::Id"
  VPCSubnet:
    ConstraintDescription: Must be a valid VPC subnet
    Description: "The VPC subnet to use"
    Type: "AWS::EC2::Subnet::Id"
  SSHAccessCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: Must be a valid IP range in x.x.x.x/x notation
    Description: 'The CIDR IP range that is permitted to access the instance via SSH.
      Note: a value of 0.0.0.0/0 will allow access from ANY ip address'
    Type: String
    Default: 0.0.0.0/0
  HTTPAccessCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: Must be a valid IP range in x.x.x.x/x notation
    Description: 'The CIDR IP range that is permitted to access the instance via HTTP/HTTPS.
      Note: a value of 0.0.0.0/0 will allow access from ANY ip address'
    Type: String
    Default: 0.0.0.0/0
  KeyPairName: 
    Description: Amazon EC2 Key Pair
    Type: "AWS::EC2::KeyPair::KeyName"
    ConstraintDescription: must be a valid Key Pair
    Default: training
  InstanceAMI:
    Description: AMI ID for EC2 Instance
    Type : String
    Default: ami-04b9e92b5572fa0d1
  ElsInstanceType:
    AllowedValues:
    - t2.micro
    - t3a.medium
    - t2.small
    - t2.medium
    - t2.large
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.10xlarge
    - m3.medium
    - m3.large
    - m3.xlarge
    - m3.2xlarge
    - c4.large
    - c4.xlarge
    - c4.2xlarge
    - c4.4xlarge
    - c4.8xlarge
    - c3.large
    - c3.xlarge
    - c3.2xlarge
    - c3.4xlarge
    - c3.8xlarge
    - r3.large
    - r3.xlarge
    - r3.2xlarge
    - r3.4xlarge
    - r3.8xlarge
    - i2.xlarge
    - i2.2xlarge
    - i2.4xlarge
    - i2.8xlarge
    ConstraintDescription: Choose an instance type.
    Default: t3a.medium
    Description: Elasticsearch Server node instance type
    Type: String

  VolumeName:
    Description: The name to be used for the EFS volume
    Type: String
    MinLength: '1'
    Default: sharedfoldervolume

  MountPoint:
    Description: The Linux mount point for the EFS volume
    Type: String
    MinLength: '1'
    Default: sharedfoldermountpoint
    
Resources:
  CloudwatchLogRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "ec2.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"

  CloudwatchLogPolicy:
    Type: AWS::IAM::Policy 
    Properties:
      PolicyName: CloudwatchLoggingAllow
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
              - logs:DescribeLogStreams
            Resource: "arn:aws:logs:*:*:*"
      Roles: 
        - !Ref CloudwatchLogRole

  ElsDevInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
      - !Ref CloudwatchLogRole

  ElsDevSG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref VPCId
      GroupDescription: Enable Elasticsearch access
      SecurityGroupIngress:
        - IpProtocol: 'tcp'
          FromPort: '9200'
          ToPort: '9200'
          CidrIp: !Ref HTTPAccessCIDR
        - IpProtocol: 'tcp'
          FromPort: '9300'
          ToPort: '9300'
          CidrIp: !Ref HTTPAccessCIDR
        - IpProtocol: 'tcp'
          FromPort: '5601'
          ToPort: '5601'
          CidrIp: !Ref HTTPAccessCIDR
        - IpProtocol: 'tcp'
          FromPort: '80'
          ToPort: '80'
          CidrIp: !Ref HTTPAccessCIDR
        - IpProtocol: 'tcp'
          FromPort: '443'
          ToPort: '443'
          CidrIp: !Ref HTTPAccessCIDR
        - IpProtocol: 'tcp'
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref SSHAccessCIDR
        - IpProtocol: 'tcp'
          FromPort: '2049'
          ToPort: '2049'
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: ElsDevSG

  FileSystem:
    Type: AWS::EFS::FileSystem
    Properties:
      PerformanceMode: generalPurpose
      FileSystemTags:
        - Key: Name
          Value: !Join
            - ''
            - - !Ref 'AWS::StackName'
              - -sharedfolderfs
  MountTarget:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId:
        Ref: FileSystem
      SubnetId: !Ref VPCSubnet
      SecurityGroups:
        - !Ref ElsDevSG
          
  EC2InstanceServer1:
    Type: AWS::EC2::Instance
    Properties: 
      IamInstanceProfile: !Ref ElsDevInstanceProfile
      ImageId: !Ref InstanceAMI
      InstanceType: !Ref ElsInstanceType
      KeyName: !Ref KeyPairName
      SubnetId: !Ref VPCSubnet
      SecurityGroupIds: 
        - !Ref ElsDevSG
      Tags:
        - Key: Name
          Value: !Join
            - ''
            - - !Ref 'AWS::StackName'
              - ECE2-Server1
      UserData:
       Fn::Base64: !Sub |
         #!/bin/bash -xe       
         sudo useradd elastic
         sudo usermod -a -G root,adm,dialout,cdrom,floppy,sudo,audio,dip,video,plugdev,lxd,netdev elastic
         sudo mkhomedir_helper elastic
         sudo cp -r /home/ubuntu/.ssh/ /home/elastic/.ssh/
         sudo chown -R elastic:elastic /home/elastic/.ssh/
         sudo mkdir /shared_folder/
         sudo apt-get -y install nfs-common
         sudo mount -t nfs4 -o vers=4.1 ${FileSystem}.efs.${AWS::Region}.amazonaws.com:/ /shared_folder 
         sudo echo ${AWS::StackName} >>/root/debug.txt
         sudo wget -O /root/userdata.sh https://trainingelk.s3.amazonaws.com/userdata2.sh
         sudo chmod 775 /root/userdata.sh
         sudo sh /root/userdata.sh
         
  EC2InstanceServer2:
    Type: AWS::EC2::Instance
    Properties: 
      IamInstanceProfile: !Ref ElsDevInstanceProfile
      ImageId: !Ref InstanceAMI
      InstanceType: !Ref ElsInstanceType
      KeyName: !Ref KeyPairName
      SubnetId: !Ref VPCSubnet
      SecurityGroupIds: 
        - !Ref ElsDevSG
      Tags:
        - Key: Name
          Value: !Join
            - ''
            - - !Ref 'AWS::StackName'
              - ECE2-Server2
      UserData:
       Fn::Base64: !Sub |
         #!/bin/bash -xe       
         sudo useradd elastic
         sudo usermod -a -G root,adm,dialout,cdrom,floppy,sudo,audio,dip,video,plugdev,lxd,netdev elastic
         sudo mkhomedir_helper elastic
         sudo cp -r /home/ubuntu/.ssh/ /home/elastic/.ssh/
         sudo chown -R elastic:elastic /home/elastic/.ssh/
         sudo mkdir /shared_folder/
         sudo apt-get -y install nfs-common
         sudo mount -t nfs4 -o vers=4.1 ${FileSystem}.efs.${AWS::Region}.amazonaws.com:/ /shared_folder 
         sudo echo ${AWS::StackName} >>/root/debug.txt
         sudo wget -O /root/userdata.sh https://trainingelk.s3.amazonaws.com/userdata2.sh
         sudo chmod 775 /root/userdata.sh
         sudo sh /root/userdata.sh

  EC2InstanceServer3:
    Type: AWS::EC2::Instance
    Properties: 
      IamInstanceProfile: !Ref ElsDevInstanceProfile
      ImageId: !Ref InstanceAMI
      InstanceType: !Ref ElsInstanceType
      KeyName: !Ref KeyPairName
      SubnetId: !Ref VPCSubnet
      SecurityGroupIds: 
        - !Ref ElsDevSG
      Tags:
        - Key: Name
          Value: !Join
            - ''
            - - !Ref 'AWS::StackName'
              - ECE2-Server3
      UserData:
       Fn::Base64: !Sub |
         #!/bin/bash -xe       
         sudo useradd elastic
         sudo usermod -a -G root,adm,dialout,cdrom,floppy,sudo,audio,dip,video,plugdev,lxd,netdev elastic
         sudo mkhomedir_helper elastic
         sudo cp -r /home/ubuntu/.ssh/ /home/elastic/.ssh/
         sudo chown -R elastic:elastic /home/elastic/.ssh/
         sudo mkdir /shared_folder/
         sudo apt-get -y install nfs-common
         sudo mount -t nfs4 -o vers=4.1 ${FileSystem}.efs.${AWS::Region}.amazonaws.com:/ /shared_folder 
         sudo echo ${AWS::StackName} >>/root/debug.txt
         sudo wget -O /root/userdata.sh https://trainingelk.s3.amazonaws.com/userdata2.sh
         sudo chmod 775 /root/userdata.sh
         sudo sh /root/userdata.sh
         
  EC2InstanceServer4:
    Type: AWS::EC2::Instance
    Properties: 
      IamInstanceProfile: !Ref ElsDevInstanceProfile
      ImageId: !Ref InstanceAMI
      InstanceType: !Ref ElsInstanceType
      KeyName: !Ref KeyPairName
      SubnetId: !Ref VPCSubnet
      SecurityGroupIds: 
        - !Ref ElsDevSG
      Tags:
        - Key: Name
          Value: !Join
            - ''
            - - !Ref 'AWS::StackName'
              - ECE2-Server4
      UserData:
       Fn::Base64: !Sub |
         #!/bin/bash -xe       
         sudo useradd elastic
         sudo usermod -a -G root,adm,dialout,cdrom,floppy,sudo,audio,dip,video,plugdev,lxd,netdev elastic
         sudo mkhomedir_helper elastic
         sudo cp -r /home/ubuntu/.ssh/ /home/elastic/.ssh/
         sudo chown -R elastic:elastic /home/elastic/.ssh/
         sudo mkdir /shared_folder/
         sudo apt-get -y install nfs-common
         sudo mount -t nfs4 -o vers=4.1 ${FileSystem}.efs.${AWS::Region}.amazonaws.com:/ /shared_folder 
         sudo echo ${AWS::StackName} >>/root/debug.txt
         sudo wget -O /root/userdata.sh https://trainingelk.s3.amazonaws.com/userdata3.sh
         sudo chmod 775 /root/userdata.sh
         sudo sh /root/userdata.sh
         
  EC2InstanceServer5:
    Type: AWS::EC2::Instance
    Properties: 
      IamInstanceProfile: !Ref ElsDevInstanceProfile
      ImageId: !Ref InstanceAMI
      InstanceType: !Ref ElsInstanceType
      KeyName: !Ref KeyPairName
      SubnetId: !Ref VPCSubnet
      SecurityGroupIds: 
        - !Ref ElsDevSG
      Tags:
        - Key: Name
          Value: !Join
            - ''
            - - !Ref 'AWS::StackName'
              - ECE2-Server5
      UserData:
       Fn::Base64: !Sub |
         #!/bin/bash -xe       
         sudo useradd elastic
         sudo usermod -a -G root,adm,dialout,cdrom,floppy,sudo,audio,dip,video,plugdev,lxd,netdev elastic
         sudo mkhomedir_helper elastic
         sudo cp -r /home/ubuntu/.ssh/ /home/elastic/.ssh/
         sudo chown -R elastic:elastic /home/elastic/.ssh/
         sudo mkdir /shared_folder/
         sudo apt-get -y install nfs-common
         sudo mount -t nfs4 -o vers=4.1 ${FileSystem}.efs.${AWS::Region}.amazonaws.com:/ /shared_folder 
         sudo echo ${AWS::StackName} >>/root/debug.txt
         sudo wget -O /root/userdata.sh https://trainingelk.s3.amazonaws.com/userdata3.sh
         sudo chmod 775 /root/userdata.sh
         sudo sh /root/userdata.sh
         
  EC2InstanceServer6:
    Type: AWS::EC2::Instance
    Properties: 
      IamInstanceProfile: !Ref ElsDevInstanceProfile
      ImageId: !Ref InstanceAMI
      InstanceType: !Ref ElsInstanceType
      KeyName: !Ref KeyPairName
      SubnetId: !Ref VPCSubnet
      SecurityGroupIds: 
        - !Ref ElsDevSG
      Tags:
        - Key: Name
          Value: !Join
            - ''
            - - !Ref 'AWS::StackName'
              - ECE2-Server6
      UserData:
       Fn::Base64: !Sub |
         #!/bin/bash -xe       
         sudo useradd elastic
         sudo usermod -a -G root,adm,dialout,cdrom,floppy,sudo,audio,dip,video,plugdev,lxd,netdev elastic
         sudo mkhomedir_helper elastic
         sudo cp -r /home/ubuntu/.ssh/ /home/elastic/.ssh/
         sudo chown -R elastic:elastic /home/elastic/.ssh/
         sudo mkdir /shared_folder/
         sudo apt-get -y install nfs-common
         sudo mount -t nfs4 -o vers=4.1 ${FileSystem}.efs.${AWS::Region}.amazonaws.com:/ /shared_folder 
         sudo echo ${AWS::StackName} >>/root/debug.txt
         sudo wget -O /root/userdata.sh https://trainingelk.s3.amazonaws.com/userdata3.sh
         sudo chmod 775 /root/userdata.sh
         sudo sh /root/userdata.sh
Outputs:
  Server1DNS:
    Description: Elasticsearch Dev DNS
    Value: !GetAtt EC2InstanceServer1.PublicDnsName
  Server1IP:
    Description: Elasticsearch Dev IP
    Value: !GetAtt EC2InstanceServer1.PublicIp
  Server2DNS:
    Description: Elasticsearch Dev DNS
    Value: !GetAtt EC2InstanceServer2.PublicDnsName
  Server2IP:
    Description: Elasticsearch Dev IP
    Value: !GetAtt EC2InstanceServer2.PublicIp
  Server3DNS:
    Description: Elasticsearch Dev DNS
    Value: !GetAtt EC2InstanceServer3.PublicDnsName
  Server3IP:
    Description: Elasticsearch Dev IP
    Value: !GetAtt EC2InstanceServer3.PublicIp
  Server4DNS:
    Description: Elasticsearch Dev DNS
    Value: !GetAtt EC2InstanceServer4.PublicDnsName
  Server4IP:
    Description: Elasticsearch Dev IP
    Value: !GetAtt EC2InstanceServer4.PublicIp
  Server5DNS:
    Description: Elasticsearch Dev DNS
    Value: !GetAtt EC2InstanceServer5.PublicDnsName
  Server5IP:
    Description: Elasticsearch Dev IP
    Value: !GetAtt EC2InstanceServer5.PublicIp
  Server6DNS:
    Description: Elasticsearch Dev DNS
    Value: !GetAtt EC2InstanceServer6.PublicDnsName
  Server6IP:
    Description: Elasticsearch Dev IP
    Value: !GetAtt EC2InstanceServer6.PublicIp
  MountTargetID:
    Description: Mount target ID
    Value:
      Ref: MountTarget
  FileSystemID:
    Description: File system ID
    Value:
      Ref: FileSystem